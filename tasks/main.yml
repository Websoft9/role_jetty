- name: Install this role on {{ansible_os_family}}
  include: "{{ansible_os_family}}.yml"

- name: Create jetty User
  user:
    name: jetty
    shell: /usr/bin/bash
    create_home: yes

# download jetty and unarchive
- name: download jetty and unarchive
  unarchive:
      src: "{{jetty_download_url}}"
      dest: /usr/local/
      remote_src: yes 
      group: jetty
      owner: jetty

# excute again,delete the jetty directory
- name: Remove jetty directory
  file:
    path: /usr/local/jetty
    state: absent

- name: copy files
  shell : mv /usr/local/jetty*/  /usr/local/jetty

- name: Create jetty app directory
  file:
    path: /data/wwwroot/jetty
    state: directory
    owner: jetty
    group: jetty

- name: Copy Demo
  shell : cp -rf /usr/local/jetty/demo-base/*  /data/wwwroot/jetty

- name: Enable remote
  lineinfile:
    path: /data/wwwroot/jetty/start.d/http.ini
    regexp: '# jetty.http.host=0.0.0.0'
    line: 'jetty.http.host=0.0.0.0'

- name: Edit http_port 8090
  lineinfile:
    path: /data/wwwroot/jetty/start.d/http.ini
    regexp: '# jetty.http.port=8080'
    line: 'jetty.http.port={{jetty_port}}}'

- name: Setting jetty service
  copy:
    src: jetty.service
    dest: /lib/systemd/system/jetty.service

- name: start jetty
  service:
    name: jetty.service
    state: started
    enabled: yes

- name: Create a symbolic link
  file:
    src: '{{item.src}}'
    dest: '{{item.dest}}'
    state: link
  with_items:
    - {src: "/data/wwwroot/jetty/start.d",dest: "/data/config/jetty"}
    - {src: "{{docker_apps_dir}}/{{docker_appname}}",dest: "/data/wwwroot/{{docker_appname}}"}

# Check version,
# must use sudo sh -c to solve the no-root permission
- block:
  - name: Check Jetty Version
    shell: sudo sh -c "head -n 1 /usr/local/jetty/VERSION.txt > /data/logs/install_version.txt"

# check service state
- name: Check Jetty Service
  shell: systemctl status jetty | grep Active*
  register: check_jetty_service
  notify: check_jetty_service


